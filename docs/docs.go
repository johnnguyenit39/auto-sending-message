// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/auto-sender/start": {
            "post": {
                "description": "Khởi động tiến trình gửi tin nhắn tự động mỗi 2 phút",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auto-sender"
                ],
                "summary": "Bắt đầu gửi tin nhắn tự động",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auto-sender/stop": {
            "post": {
                "description": "Dừng tiến trình gửi tin nhắn tự động",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auto-sender"
                ],
                "summary": "Dừng gửi tin nhắn tự động",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/messages/sent": {
            "get": {
                "description": "Trả về danh sách các tin nhắn đã gửi thành công",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "messages"
                ],
                "summary": "Lấy danh sách tin nhắn đã gửi",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Message"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v2/mockj/create": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new MockJ",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MockJ"
                ],
                "summary": "Create new MockJ",
                "parameters": [
                    {
                        "description": "Create MockJ",
                        "name": "MockJ",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.MockJAddRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.MockJGetResponse"
                        }
                    }
                }
            }
        },
        "/v2/mockj/delete": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a new MockJ",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MockJ"
                ],
                "summary": "Delete new MockJ",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "User UUID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.MockJ"
                        }
                    }
                }
            }
        },
        "/v2/mockj/get": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Return MockJ",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MockJ"
                ],
                "summary": "Get MockJ",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "User UUID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.MockJGetResponse"
                        }
                    }
                }
            }
        },
        "/v2/mockj/list": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve a list of MockJs based on provided filters and pagination",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MockJ"
                ],
                "summary": "Get a list of MockJ",
                "parameters": [
                    {
                        "description": "Get MockJs",
                        "name": "MockJ",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.MockJGetListRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.MockJGetListResponse"
                        }
                    }
                }
            }
        },
        "/v2/mockj/update": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update MockJ",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MockJ"
                ],
                "summary": "Update MockJ",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "User UUID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update User",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.MockJUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.MockJGetResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "common.Pagination": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "index": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                }
            }
        },
        "common.PaginationRequest": {
            "type": "object",
            "properties": {
                "index": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                }
            }
        },
        "model.Message": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "sent": {
                    "type": "boolean"
                },
                "sent_at": {
                    "type": "string"
                },
                "to": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.MockJ": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.MockJAddRequest": {
            "type": "object"
        },
        "model.MockJGetListRequest": {
            "type": "object",
            "properties": {
                "Pagination": {
                    "$ref": "#/definitions/common.PaginationRequest"
                }
            }
        },
        "model.MockJGetListResponse": {
            "type": "object",
            "properties": {
                "List": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.MockJ"
                    }
                },
                "Paging": {
                    "$ref": "#/definitions/common.Pagination"
                }
            }
        },
        "model.MockJGetResponse": {
            "type": "object"
        },
        "model.MockJUpdateRequest": {
            "type": "object"
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:80",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "City Engagement API",
	Description:      "City Engagement API",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
